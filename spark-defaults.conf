#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# Default system properties included when running spark-submit.
# This is useful for setting default environmental settings.

# Example:
# spark.master                     spark://master:7077
# spark.eventLog.enabled           true
# spark.eventLog.dir               hdfs://namenode:8021/directory
# spark.serializer                 org.apache.spark.serializer.KryoSerializer
# spark.driver.memory              5g
# spark.executor.extraJavaOptions  -XX:+PrintGCDetails -Dkey=value -Dnumbers="one two three"
spark.history.provider				org.apache.spark.deploy.history.FsHistoryProvider

spark.executor.extraJavaOptions		-Dlog4j.configuration=file:/usr/local/spark/conf/log4j.properties

spark.eventLog.dir					file:///spark-events
spark.eventLog.enabled				true

#in compose for stack this is expected to be a subdirectory of 'data' - it needs to be a shared fs loc for all cluster members logging
spark.history.fs.logDirectory		file:///spark_events

spark.local.dir						/task_usage

#up from 10s default
spark.history.fs.update.interval	60s

#retainedApplications is default val, here for clarity
spark.history.retainedApplications	50

# dont keep old stuff
spark.history.fs.cleaner.enabled	true
spark.history.fs.cleaner.interval	1d
spark.history.fs.cleaner.maxAge		7d

# Whether to compress RDD checkpoints. Generally a good idea (verbatim from docs, yet disabled - for cpu impact?). Compression will use spark.io.compression.codec.
spark.checkpoint.compress			true

spark.io.compression.codec			org.apache.spark.io.SnappyCompressionCodec

spark.dynamicAllocation.enabled		true

spark.network.timeout 				10000000